{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleNameChange","event","setState","target","value","handleNumberChange","handleSubmit","preventDefault","props","addContact","reset","onSubmit","this","className","type","onChange","Component","defaultProps","ContactListItem","contact","onClickDelete","id","onClick","ContactList","list","filter","deleteContact","listRender","findedContacts","toLowerCase","includes","length","filterOn","map","key","propTypes","arrayOf","shape","string","isRequired","func","Filter","onFindItem","App","contacts","findContact","isUnique","findResult","find","undefined","contactsArr","newContact","uuidv4","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.811afba7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './ContactForm.scss';\r\n\r\nexport default class ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: propTypes.string,\r\n    number: propTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  handleNumberChange = event => {\r\n    this.setState({ number: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n    event.target.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            onChange={this.handleNumberChange}\r\n          />\r\n        </label>\r\n        <input className=\"submitBtn\" type=\"submit\" value=\"Add contact\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './ContactListItem.scss';\r\n\r\nfunction ContactListItem({ contact, onClickDelete }) {\r\n  const { id, name, number } = contact;\r\n  return (\r\n    <>\r\n      {name}: {number}\r\n      <button className=\"deleteContactBtn\" onClick={() => onClickDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  contact: propTypes.shape({\r\n    id: propTypes.string.isRequired,\r\n    name: propTypes.string.isRequired,\r\n    number: propTypes.string,\r\n  }).isRequired,\r\n  onClickDelete: propTypes.func.isRequired,\r\n};\r\n\r\nContactListItem.defaultProps = {\r\n  number: '',\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nimport './ContactList.scss';\r\n\r\nfunction ContactList({ list, filter, deleteContact }) {\r\n  return filter === ''\r\n    ? listRender(list, deleteContact)\r\n    : filterOn(list, filter, deleteContact);\r\n}\r\n\r\nfunction listRender(list, deleteContact) {\r\n  return (\r\n    <ul className=\"contactList\">\r\n      {list.map(contact => (\r\n        <li className=\"contactListItem\" key={contact.id}>\r\n          <ContactListItem contact={contact} onClickDelete={deleteContact} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction filterOn(list, filter, deleteContact) {\r\n  const findedContacts = list.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n  return findedContacts.length === 0 ? (\r\n    <h4>Nothing found</h4>\r\n  ) : (\r\n    listRender(findedContacts, deleteContact)\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  list: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      number: propTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  deleteContact: propTypes.func.isRequired,\r\n};\r\n\r\nContactList.defaultProps = {\r\n  number: '',\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Filter({ onFindItem }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" onChange={onFindItem} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFindItem: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nimport './App.scss';\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {\r\n    filter: '',\r\n    contacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: propTypes.arrayOf(\r\n      propTypes.shape({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string,\r\n      }),\r\n    ),\r\n  };\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  findContact = event => {\r\n    this.setState({ filter: event.target.value });\r\n  };\r\n\r\n  isUnique = name => {\r\n    const findResult = this.state.contacts.find(\r\n      contact => contact.name === name,\r\n    );\r\n    return findResult === undefined ? true : name !== findResult.name;\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (name !== '' && this.isUnique(name)) {\r\n      const contactsArr = this.state.contacts;\r\n      const id = uuidv4();\r\n      const newContact = [{ name, number, id }];\r\n      this.setState({ contacts: [...contactsArr, ...newContact] });\r\n    }\r\n    if (!this.isUnique(name)) {\r\n      alert(`${name} is already in contact`);\r\n    }\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter onFindItem={this.findContact} />\r\n        <ContactList\r\n          list={this.state.contacts}\r\n          filter={this.state.filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}